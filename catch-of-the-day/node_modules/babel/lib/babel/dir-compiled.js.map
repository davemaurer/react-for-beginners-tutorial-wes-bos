{"version":3,"sources":["dir.js"],"names":[],"mappings":"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","file":"dir-compiled.js","sourcesContent":["\"use strict\";\n\nvar outputFileSync = require(\"output-file-sync\");\nvar pathExists = require(\"path-exists\");\nvar chokidar = require(\"chokidar\");\nvar slash = require(\"slash\");\nvar path = require(\"path\");\nvar util = require(\"./util\");\nvar fs = require(\"fs\");\nvar _ = require(\"lodash\");\n\nmodule.exports = function (commander, filenames) {\n  function write(src, relative) {\n    // remove extension and then append back on .js\n    relative = relative.replace(/\\.(\\w*?)$/, \"\") + \".js\";\n\n    var dest = path.join(commander.outDir, relative);\n\n    var data = util.compile(src, {\n      sourceFileName: slash(path.relative(dest + \"/..\", src)),\n      sourceMapTarget: path.basename(relative)\n    });\n    if (!commander.copyFiles && data.ignored) return;\n\n    if (data.map && commander.sourceMaps && commander.sourceMaps !== \"inline\") {\n      var mapLoc = dest + \".map\";\n      data.code = util.addSourceMappingUrl(data.code, mapLoc);\n      outputFileSync(mapLoc, JSON.stringify(data.map));\n    }\n\n    outputFileSync(dest, data.code);\n\n    util.log(src + \" -> \" + dest);\n  }\n\n  function handleFile(src, filename) {\n    if (util.shouldIgnore(src)) return;\n\n    if (util.canCompile(filename, commander.extensions)) {\n      write(src, filename);\n    } else if (commander.copyFiles) {\n      outputFileSync(path.join(commander.outDir, filename), fs.readFileSync(src));\n    }\n  }\n\n  function handle(filename) {\n    if (!pathExists.sync(filename)) return;\n\n    var stat = fs.statSync(filename);\n\n    if (stat.isDirectory(filename)) {\n      var dirname = filename;\n\n      _.each(util.readdir(dirname), function (filename) {\n        var src = path.join(dirname, filename);\n        handleFile(src, filename);\n      });\n    } else {\n      write(filename, filename);\n    }\n  }\n\n  _.each(filenames, handle);\n\n  if (commander.watch) {\n    _.each(filenames, function (dirname) {\n      var watcher = chokidar.watch(dirname, {\n        persistent: true,\n        ignoreInitial: true\n      });\n\n      _.each([\"add\", \"change\"], function (type) {\n        watcher.on(type, function (filename) {\n          var relative = path.relative(dirname, filename) || filename;\n          try {\n            handleFile(filename, relative);\n          } catch (err) {\n            console.error(err.stack);\n          }\n        });\n      });\n    });\n  }\n};"]}