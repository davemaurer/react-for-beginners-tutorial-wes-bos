{"version":3,"sources":["util.js"],"names":[],"mappings":"AAAA;;AAEA,IAAI,YAAY,QAAQ,WAAR,CAAhB;AACA,IAAI,UAAU,QAAQ,sBAAR,CAAd;AACA,IAAI,QAAQ,QAAQ,SAAR,CAAZ;AACA,IAAI,QAAQ,QAAQ,YAAR,CAAZ;AACA,IAAI,OAAO,QAAQ,YAAR,EAAsB,IAAjC;AACA,IAAI,OAAO,QAAQ,MAAR,CAAX;AACA,IAAI,KAAK,QAAQ,IAAR,CAAT;AACA,IAAI,IAAI,QAAQ,QAAR,CAAR;;AAEA,QAAQ,aAAR,GAAwB,UAAU,QAAV,EAAoB;AAC1C,SAAO,QAAQ,QAAR,EAAkB,MAAlB,CAAyB,UAAU,QAAV,EAAoB;AAClD,WAAO,KAAK,UAAL,CAAgB,QAAhB,CAAP;AACD,GAFM,CAAP;AAGD,CAJD;;AAMA,QAAQ,OAAR,GAAkB,OAAlB;;AAEA,QAAQ,UAAR,GAAqB,KAAK,UAA1B;;AAEA,QAAQ,YAAR,GAAuB,UAAU,GAAV,EAAe;AACpC,SAAO,KAAK,YAAL,CAAkB,GAAlB,EAAuB,MAAM,IAAN,CAAW,MAAlC,EAA0C,MAAM,IAAN,CAAW,IAArD,CAAP;AACD,CAFD;;AAIA,QAAQ,mBAAR,GAA8B,UAAU,IAAV,EAAgB,GAAhB,EAAqB;AACjD,SAAO,OAAO,yBAAP,GAAmC,KAAK,QAAL,CAAc,GAAd,CAA1C;AACD,CAFD;;AAIA,QAAQ,GAAR,GAAc,UAAU,GAAV,EAAe;AAC3B,MAAI,CAAC,UAAU,KAAf,EAAsB,QAAQ,GAAR,CAAY,GAAZ;AACvB,CAFD;;AAIA,QAAQ,SAAR,GAAoB,UAAU,QAAV,EAAoB,IAApB,EAA0B,IAA1B,EAAgC;AAClD,SAAO,EAAE,QAAF,CAAW,QAAQ,EAAnB,EAAuB,MAAM,IAA7B,CAAP;AACA,OAAK,QAAL,GAAgB,QAAhB;AACA,OAAK,MAAL,GAAc,IAAd;AACA,OAAK,IAAL,GAAY,IAAZ;;AAEA,MAAI,SAAS,MAAM,SAAN,CAAgB,IAAhB,EAAsB,IAAtB,CAAb;AACA,SAAO,QAAP,GAAkB,QAAlB;AACA,SAAO,MAAP,GAAgB,IAAhB;AACA,SAAO,MAAP;AACD,CAVD;;AAYA,QAAQ,OAAR,GAAkB,UAAU,QAAV,EAAoB,IAApB,EAA0B;AAC1C,MAAI;AACF,QAAI,OAAO,GAAG,YAAH,CAAgB,QAAhB,EAA0B,MAA1B,CAAX;AACA,WAAO,QAAQ,SAAR,CAAkB,QAAlB,EAA4B,IAA5B,EAAkC,IAAlC,CAAP;AACD,GAHD,CAGE,OAAO,GAAP,EAAY;AACZ,QAAI,UAAU,KAAd,EAAqB;AACnB,cAAQ,KAAR,CAAc,aAAa,GAAb,CAAd;AACA,aAAO,EAAE,SAAS,IAAX,EAAP;AACD,KAHD,MAGO;AACL,YAAM,GAAN;AACD;AACF;AACF,CAZD;;AAcA,SAAS,YAAT,CAAsB,GAAtB,EAA2B;AACzB,MAAI,IAAI,MAAJ,IAAc,eAAe,WAAjC,EAA8C;AAC5C,WAAO,IAAI,IAAJ,GAAW,IAAX,GAAkB,IAAI,OAAtB,GAAgC,IAAhC,GAAuC,IAAI,SAAlD;AACD,GAFD,MAEO;AACL,WAAO,IAAI,KAAX;AACD;AACF;;AAED,QAAQ,EAAR,CAAW,mBAAX,EAAgC,UAAU,GAAV,EAAe;AAC7C,UAAQ,KAAR,CAAc,aAAa,GAAb,CAAd;AACA,UAAQ,IAAR,CAAa,CAAb;AACD,CAHD","file":"util-compiled.js","sourcesContent":["\"use strict\";\n\nvar commander = require(\"commander\");\nvar readdir = require(\"fs-readdir-recursive\");\nvar index = require(\"./index\");\nvar babel = require(\"babel-core\");\nvar util = require(\"babel-core\").util;\nvar path = require(\"path\");\nvar fs = require(\"fs\");\nvar _ = require(\"lodash\");\n\nexports.readdirFilter = function (filename) {\n  return readdir(filename).filter(function (filename) {\n    return util.canCompile(filename);\n  });\n};\n\nexports.readdir = readdir;\n\nexports.canCompile = util.canCompile;\n\nexports.shouldIgnore = function (loc) {\n  return util.shouldIgnore(loc, index.opts.ignore, index.opts.only);\n};\n\nexports.addSourceMappingUrl = function (code, loc) {\n  return code + \"\\n//# sourceMappingURL=\" + path.basename(loc);\n};\n\nexports.log = function (msg) {\n  if (!commander.quiet) console.log(msg);\n};\n\nexports.transform = function (filename, code, opts) {\n  opts = _.defaults(opts || {}, index.opts);\n  opts.filename = filename;\n  opts.ignore = null;\n  opts.only = null;\n\n  var result = babel.transform(code, opts);\n  result.filename = filename;\n  result.actual = code;\n  return result;\n};\n\nexports.compile = function (filename, opts) {\n  try {\n    var code = fs.readFileSync(filename, \"utf8\");\n    return exports.transform(filename, code, opts);\n  } catch (err) {\n    if (commander.watch) {\n      console.error(toErrorStack(err));\n      return { ignored: true };\n    } else {\n      throw err;\n    }\n  }\n};\n\nfunction toErrorStack(err) {\n  if (err._babel && err instanceof SyntaxError) {\n    return err.name + \": \" + err.message + \"\\n\" + err.codeFrame;\n  } else {\n    return err.stack;\n  }\n}\n\nprocess.on(\"uncaughtException\", function (err) {\n  console.error(toErrorStack(err));\n  process.exit(1);\n});"]}