{"version":3,"sources":["isEmpty.js"],"names":[],"mappings":";;AAAA,IAAI,SAAS,QAAQ,WAAR,CAAb;AAAA,IACI,cAAc,QAAQ,eAAR,CADlB;AAAA,IAEI,UAAU,QAAQ,WAAR,CAFd;AAAA,IAGI,cAAc,QAAQ,eAAR,CAHlB;AAAA,IAII,WAAW,QAAQ,YAAR,CAJf;AAAA,IAKI,cAAc,QAAQ,gBAAR,CALlB;AAAA,IAMI,aAAa,QAAQ,eAAR,CANjB;;AAQA;AACA,IAAI,SAAS,cAAb;AAAA,IACI,SAAS,cADb;;AAGA;AACA,IAAI,cAAc,OAAO,SAAzB;;AAEA;AACA,IAAI,iBAAiB,YAAY,cAAjC;;AAEA;AACA,IAAI,uBAAuB,YAAY,oBAAvC;;AAEA;AACA,IAAI,iBAAiB,CAAC,qBAAqB,IAArB,CAA0B,EAAE,WAAW,CAAb,EAA1B,EAA4C,SAA5C,CAAtB;;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,SAAS,OAAT,CAAiB,KAAjB,EAAwB;AACtB,MAAI,YAAY,KAAZ,MACC,QAAQ,KAAR,KAAkB,OAAO,KAAP,IAAgB,QAAlC,IACC,OAAO,MAAM,MAAb,IAAuB,UADxB,IACsC,SAAS,KAAT,CADtC,IACyD,YAAY,KAAZ,CAF1D,CAAJ,EAEmF;AACjF,WAAO,CAAC,MAAM,MAAd;AACD;AACD,MAAI,MAAM,OAAO,KAAP,CAAV;AACA,MAAI,OAAO,MAAP,IAAiB,OAAO,MAA5B,EAAoC;AAClC,WAAO,CAAC,MAAM,IAAd;AACD;AACD,MAAI,kBAAkB,YAAY,KAAZ,CAAtB,EAA0C;AACxC,WAAO,CAAC,WAAW,KAAX,EAAkB,MAA1B;AACD;AACD,OAAK,IAAI,GAAT,IAAgB,KAAhB,EAAuB;AACrB,QAAI,eAAe,IAAf,CAAoB,KAApB,EAA2B,GAA3B,CAAJ,EAAqC;AACnC,aAAO,KAAP;AACD;AACF;AACD,SAAO,IAAP;AACD;;AAED,OAAO,OAAP,GAAiB,OAAjB","file":"isEmpty-compiled.js","sourcesContent":["var getTag = require('./_getTag'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isArrayLike = require('./isArrayLike'),\n    isBuffer = require('./isBuffer'),\n    isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/** Detect if properties shadowing those on `Object.prototype` are non-enumerable. */\nvar nonEnumShadows = !propertyIsEnumerable.call({ 'valueOf': 1 }, 'valueOf');\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' ||\n        typeof value.splice == 'function' || isBuffer(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (nonEnumShadows || isPrototype(value)) {\n    return !nativeKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = isEmpty;\n"]}