{"version":3,"sources":["react.js"],"names":[],"mappings":"AAAA;;AAEA,QAAQ,UAAR,GAAqB,IAArB;AACA,QAAQ,gBAAR,GAA2B,SAA3B;AACA,QAAQ,WAAR,GAAsB,WAAtB;AACA,QAAQ,aAAR,GAAwB,aAAxB;;AAEA,IAAI,SAAS,QAAQ,SAAR,CAAb;;AAEA,IAAI,IAAI,wBAAwB,MAAxB,CAAR;;AAEA,SAAS,uBAAT,CAAiC,GAAjC,EAAsC;AAAE,MAAI,OAAO,IAAI,UAAf,EAA2B;AAAE,WAAO,GAAP;AAAa,GAA1C,MAAgD;AAAE,QAAI,SAAS,EAAb,CAAiB,IAAI,OAAO,IAAX,EAAiB;AAAE,WAAK,IAAI,GAAT,IAAgB,GAAhB,EAAqB;AAAE,YAAI,OAAO,SAAP,CAAiB,cAAjB,CAAgC,IAAhC,CAAqC,GAArC,EAA0C,GAA1C,CAAJ,EAAoD,OAAO,GAAP,IAAc,IAAI,GAAJ,CAAd;AAAyB;AAAE,KAAC,OAAO,OAAP,GAAiB,GAAjB,CAAsB,OAAO,MAAP;AAAgB;AAAE;;AAE7Q,IAAI,mBAAmB,QAAQ,gBAAR,GAA2B,EAAE,0BAAF,CAA6B,iBAA7B,CAAlD;;AAEA,SAAS,WAAT,CAAqB,OAArB,EAA8B;AAC5B,SAAO,CAAC,CAAC,OAAF,IAAa,YAAY,IAAZ,CAAiB,OAAjB,CAApB;AACD;;AAED,SAAS,2BAAT,CAAqC,KAArC,EAA4C,IAA5C,EAAkD;AAChD,MAAI,QAAQ,MAAM,KAAN,CAAY,KAAZ,CAAkB,YAAlB,CAAZ;;AAEA,MAAI,mBAAmB,CAAvB;;AAEA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,MAAM,MAA1B,EAAkC,GAAlC,EAAuC;AACrC,QAAI,MAAM,CAAN,EAAS,KAAT,CAAe,QAAf,CAAJ,EAA8B;AAC5B,yBAAmB,CAAnB;AACD;AACF;;AAED,MAAI,MAAM,EAAV;;AAEA,OAAK,IAAI,KAAK,CAAd,EAAiB,KAAK,MAAM,MAA5B,EAAoC,IAApC,EAA0C;AACxC,QAAI,OAAO,MAAM,EAAN,CAAX;;AAEA,QAAI,cAAc,OAAO,CAAzB;AACA,QAAI,aAAa,OAAO,MAAM,MAAN,GAAe,CAAvC;AACA,QAAI,qBAAqB,OAAO,gBAAhC;;AAEA;AACA,QAAI,cAAc,KAAK,OAAL,CAAa,KAAb,EAAoB,GAApB,CAAlB;;AAEA;AACA,QAAI,CAAC,WAAL,EAAkB;AAChB,oBAAc,YAAY,OAAZ,CAAoB,OAApB,EAA6B,EAA7B,CAAd;AACD;;AAED;AACA,QAAI,CAAC,UAAL,EAAiB;AACf,oBAAc,YAAY,OAAZ,CAAoB,OAApB,EAA6B,EAA7B,CAAd;AACD;;AAED,QAAI,WAAJ,EAAiB;AACf,UAAI,CAAC,kBAAL,EAAyB;AACvB,uBAAe,GAAf;AACD;;AAED,aAAO,WAAP;AACD;AACF;;AAED,MAAI,GAAJ,EAAS,KAAK,IAAL,CAAU,EAAE,aAAF,CAAgB,GAAhB,CAAV;AACV;;AAED,SAAS,aAAT,CAAuB,IAAvB,EAA6B;AAC3B,MAAI,QAAQ,EAAZ;;AAEA,OAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,KAAK,QAAL,CAAc,MAAlC,EAA0C,GAA1C,EAA+C;AAC7C,QAAI,QAAQ,KAAK,QAAL,CAAc,CAAd,CAAZ;;AAEA,QAAI,EAAE,SAAF,CAAY,KAAZ,CAAJ,EAAwB;AACtB,kCAA4B,KAA5B,EAAmC,KAAnC;AACA;AACD;;AAED,QAAI,EAAE,wBAAF,CAA2B,KAA3B,CAAJ,EAAuC,QAAQ,MAAM,UAAd;AACvC,QAAI,EAAE,oBAAF,CAAuB,KAAvB,CAAJ,EAAmC;;AAEnC,UAAM,IAAN,CAAW,KAAX;AACD;;AAED,SAAO,KAAP;AACD","file":"react-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\nexports.isReactComponent = undefined;\nexports.isCompatTag = isCompatTag;\nexports.buildChildren = buildChildren;\n\nvar _index = require(\"./index\");\n\nvar t = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nvar isReactComponent = exports.isReactComponent = t.buildMatchMemberExpression(\"React.Component\");\n\nfunction isCompatTag(tagName) {\n  return !!tagName && /^[a-z]|\\-/.test(tagName);\n}\n\nfunction cleanJSXElementLiteralChild(child, args) {\n  var lines = child.value.split(/\\r\\n|\\n|\\r/);\n\n  var lastNonEmptyLine = 0;\n\n  for (var i = 0; i < lines.length; i++) {\n    if (lines[i].match(/[^ \\t]/)) {\n      lastNonEmptyLine = i;\n    }\n  }\n\n  var str = \"\";\n\n  for (var _i = 0; _i < lines.length; _i++) {\n    var line = lines[_i];\n\n    var isFirstLine = _i === 0;\n    var isLastLine = _i === lines.length - 1;\n    var isLastNonEmptyLine = _i === lastNonEmptyLine;\n\n    // replace rendered whitespace tabs with spaces\n    var trimmedLine = line.replace(/\\t/g, \" \");\n\n    // trim whitespace touching a newline\n    if (!isFirstLine) {\n      trimmedLine = trimmedLine.replace(/^[ ]+/, \"\");\n    }\n\n    // trim whitespace touching an endline\n    if (!isLastLine) {\n      trimmedLine = trimmedLine.replace(/[ ]+$/, \"\");\n    }\n\n    if (trimmedLine) {\n      if (!isLastNonEmptyLine) {\n        trimmedLine += \" \";\n      }\n\n      str += trimmedLine;\n    }\n  }\n\n  if (str) args.push(t.stringLiteral(str));\n}\n\nfunction buildChildren(node) {\n  var elems = [];\n\n  for (var i = 0; i < node.children.length; i++) {\n    var child = node.children[i];\n\n    if (t.isJSXText(child)) {\n      cleanJSXElementLiteralChild(child, elems);\n      continue;\n    }\n\n    if (t.isJSXExpressionContainer(child)) child = child.expression;\n    if (t.isJSXEmptyExpression(child)) continue;\n\n    elems.push(child);\n  }\n\n  return elems;\n}"]}