{"version":3,"sources":["core.js"],"names":[],"mappings":"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","file":"core-compiled.js","sourcesContent":["\"use strict\";\n\nvar _index = require(\"../index\");\n\nvar t = _interopRequireWildcard(_index);\n\nvar _constants = require(\"../constants\");\n\nvar _index2 = require(\"./index\");\n\nvar _index3 = _interopRequireDefault(_index2);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n(0, _index3.default)(\"ArrayExpression\", {\n  fields: {\n    elements: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeOrValueType)(\"null\", \"Expression\", \"SpreadElement\"))),\n      default: []\n    }\n  },\n  visitor: [\"elements\"],\n  aliases: [\"Expression\"]\n}); /* eslint max-len: 0 */\n\n(0, _index3.default)(\"AssignmentExpression\", {\n  fields: {\n    operator: {\n      validate: (0, _index2.assertValueType)(\"string\")\n    },\n    left: {\n      validate: (0, _index2.assertNodeType)(\"LVal\")\n    },\n    right: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    }\n  },\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Expression\"]\n});\n\n(0, _index3.default)(\"BinaryExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  fields: {\n    operator: {\n      validate: _index2.assertOneOf.apply(undefined, _constants.BINARY_OPERATORS)\n    },\n    left: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    right: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    }\n  },\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"]\n});\n\n(0, _index3.default)(\"Directive\", {\n  visitor: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _index2.assertNodeType)(\"DirectiveLiteral\")\n    }\n  }\n});\n\n(0, _index3.default)(\"DirectiveLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _index2.assertValueType)(\"string\")\n    }\n  }\n});\n\n(0, _index3.default)(\"BlockStatement\", {\n  builder: [\"body\", \"directives\"],\n  visitor: [\"directives\", \"body\"],\n  fields: {\n    directives: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Directive\"))),\n      default: []\n    },\n    body: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\", \"Statement\"]\n});\n\n(0, _index3.default)(\"BreakStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: (0, _index2.assertNodeType)(\"Identifier\"),\n      optional: true\n    }\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"]\n});\n\n(0, _index3.default)(\"CallExpression\", {\n  visitor: [\"callee\", \"arguments\"],\n  fields: {\n    callee: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    arguments: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Expression\", \"SpreadElement\")))\n    }\n  },\n  aliases: [\"Expression\"]\n});\n\n(0, _index3.default)(\"CatchClause\", {\n  visitor: [\"param\", \"body\"],\n  fields: {\n    param: {\n      validate: (0, _index2.assertNodeType)(\"Identifier\")\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\")\n    }\n  },\n  aliases: [\"Scopable\"]\n});\n\n(0, _index3.default)(\"ConditionalExpression\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  fields: {\n    test: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    consequent: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    alternate: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Expression\", \"Conditional\"]\n});\n\n(0, _index3.default)(\"ContinueStatement\", {\n  visitor: [\"label\"],\n  fields: {\n    label: {\n      validate: (0, _index2.assertNodeType)(\"Identifier\"),\n      optional: true\n    }\n  },\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"]\n});\n\n(0, _index3.default)(\"DebuggerStatement\", {\n  aliases: [\"Statement\"]\n});\n\n(0, _index3.default)(\"DoWhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  fields: {\n    test: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)(\"Statement\")\n    }\n  },\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"]\n});\n\n(0, _index3.default)(\"EmptyStatement\", {\n  aliases: [\"Statement\"]\n});\n\n(0, _index3.default)(\"ExpressionStatement\", {\n  visitor: [\"expression\"],\n  fields: {\n    expression: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    }\n  },\n  aliases: [\"Statement\", \"ExpressionWrapper\"]\n});\n\n(0, _index3.default)(\"File\", {\n  builder: [\"program\", \"comments\", \"tokens\"],\n  visitor: [\"program\"],\n  fields: {\n    program: {\n      validate: (0, _index2.assertNodeType)(\"Program\")\n    }\n  }\n});\n\n(0, _index3.default)(\"ForInStatement\", {\n  visitor: [\"left\", \"right\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\", \"ForXStatement\"],\n  fields: {\n    left: {\n      validate: (0, _index2.assertNodeType)(\"VariableDeclaration\", \"LVal\")\n    },\n    right: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)(\"Statement\")\n    }\n  }\n});\n\n(0, _index3.default)(\"ForStatement\", {\n  visitor: [\"init\", \"test\", \"update\", \"body\"],\n  aliases: [\"Scopable\", \"Statement\", \"For\", \"BlockParent\", \"Loop\"],\n  fields: {\n    init: {\n      validate: (0, _index2.assertNodeType)(\"VariableDeclaration\", \"Expression\"),\n      optional: true\n    },\n    test: {\n      validate: (0, _index2.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    update: {\n      validate: (0, _index2.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)(\"Statement\")\n    }\n  }\n});\n\n(0, _index3.default)(\"FunctionDeclaration\", {\n  builder: [\"id\", \"params\", \"body\", \"generator\", \"async\"],\n  visitor: [\"id\", \"params\", \"body\", \"returnType\", \"typeParameters\"],\n  fields: {\n    id: {\n      validate: (0, _index2.assertNodeType)(\"Identifier\")\n    },\n    params: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"LVal\")))\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\")\n    },\n    generator: {\n      default: false,\n      validate: (0, _index2.assertValueType)(\"boolean\")\n    },\n    async: {\n      default: false,\n      validate: (0, _index2.assertValueType)(\"boolean\")\n    }\n  },\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Statement\", \"Pureish\", \"Declaration\"]\n});\n\n(0, _index3.default)(\"FunctionExpression\", {\n  inherits: \"FunctionDeclaration\",\n  aliases: [\"Scopable\", \"Function\", \"BlockParent\", \"FunctionParent\", \"Expression\", \"Pureish\"],\n  fields: {\n    id: {\n      validate: (0, _index2.assertNodeType)(\"Identifier\"),\n      optional: true\n    },\n    params: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"LVal\")))\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\")\n    },\n    generator: {\n      default: false,\n      validate: (0, _index2.assertValueType)(\"boolean\")\n    },\n    async: {\n      default: false,\n      validate: (0, _index2.assertValueType)(\"boolean\")\n    }\n  }\n});\n\n(0, _index3.default)(\"Identifier\", {\n  builder: [\"name\"],\n  visitor: [\"typeAnnotation\"],\n  aliases: [\"Expression\", \"LVal\"],\n  fields: {\n    name: {\n      validate: function validate(node, key, val) {\n        if (!t.isValidIdentifier(val)) {\n          // todo\n        }\n      }\n    },\n    decorators: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Decorator\")))\n    }\n  }\n});\n\n(0, _index3.default)(\"IfStatement\", {\n  visitor: [\"test\", \"consequent\", \"alternate\"],\n  aliases: [\"Statement\", \"Conditional\"],\n  fields: {\n    test: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    consequent: {\n      validate: (0, _index2.assertNodeType)(\"Statement\")\n    },\n    alternate: {\n      optional: true,\n      validate: (0, _index2.assertNodeType)(\"Statement\")\n    }\n  }\n});\n\n(0, _index3.default)(\"LabeledStatement\", {\n  visitor: [\"label\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    label: {\n      validate: (0, _index2.assertNodeType)(\"Identifier\")\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)(\"Statement\")\n    }\n  }\n});\n\n(0, _index3.default)(\"StringLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _index2.assertValueType)(\"string\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n\n(0, _index3.default)(\"NumericLiteral\", {\n  builder: [\"value\"],\n  deprecatedAlias: \"NumberLiteral\",\n  fields: {\n    value: {\n      validate: (0, _index2.assertValueType)(\"number\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n\n(0, _index3.default)(\"NullLiteral\", {\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n\n(0, _index3.default)(\"BooleanLiteral\", {\n  builder: [\"value\"],\n  fields: {\n    value: {\n      validate: (0, _index2.assertValueType)(\"boolean\")\n    }\n  },\n  aliases: [\"Expression\", \"Pureish\", \"Literal\", \"Immutable\"]\n});\n\n(0, _index3.default)(\"RegExpLiteral\", {\n  builder: [\"pattern\", \"flags\"],\n  deprecatedAlias: \"RegexLiteral\",\n  aliases: [\"Expression\", \"Literal\"],\n  fields: {\n    pattern: {\n      validate: (0, _index2.assertValueType)(\"string\")\n    },\n    flags: {\n      validate: (0, _index2.assertValueType)(\"string\"),\n      default: \"\"\n    }\n  }\n});\n\n(0, _index3.default)(\"LogicalExpression\", {\n  builder: [\"operator\", \"left\", \"right\"],\n  visitor: [\"left\", \"right\"],\n  aliases: [\"Binary\", \"Expression\"],\n  fields: {\n    operator: {\n      validate: _index2.assertOneOf.apply(undefined, _constants.LOGICAL_OPERATORS)\n    },\n    left: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    right: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    }\n  }\n});\n\n(0, _index3.default)(\"MemberExpression\", {\n  builder: [\"object\", \"property\", \"computed\"],\n  visitor: [\"object\", \"property\"],\n  aliases: [\"Expression\", \"LVal\"],\n  fields: {\n    object: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    property: {\n      validate: function validate(node, key, val) {\n        var expectedType = node.computed ? \"Expression\" : \"Identifier\";\n        (0, _index2.assertNodeType)(expectedType)(node, key, val);\n      }\n    },\n    computed: {\n      default: false\n    }\n  }\n});\n\n(0, _index3.default)(\"NewExpression\", {\n  visitor: [\"callee\", \"arguments\"],\n  aliases: [\"Expression\"],\n  fields: {\n    callee: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    arguments: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Expression\", \"SpreadElement\")))\n    }\n  }\n});\n\n(0, _index3.default)(\"Program\", {\n  visitor: [\"directives\", \"body\"],\n  builder: [\"body\", \"directives\"],\n  fields: {\n    directives: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Directive\"))),\n      default: []\n    },\n    body: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Statement\")))\n    }\n  },\n  aliases: [\"Scopable\", \"BlockParent\", \"Block\", \"FunctionParent\"]\n});\n\n(0, _index3.default)(\"ObjectExpression\", {\n  visitor: [\"properties\"],\n  aliases: [\"Expression\"],\n  fields: {\n    properties: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"ObjectMethod\", \"ObjectProperty\", \"SpreadProperty\")))\n    }\n  }\n});\n\n(0, _index3.default)(\"ObjectMethod\", {\n  builder: [\"kind\", \"key\", \"params\", \"body\", \"computed\"],\n  fields: {\n    kind: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"string\"), (0, _index2.assertOneOf)(\"method\", \"get\", \"set\")),\n      default: \"method\"\n    },\n    computed: {\n      validate: (0, _index2.assertValueType)(\"boolean\"),\n      default: false\n    },\n    key: {\n      validate: function validate(node, key, val) {\n        var expectedTypes = node.computed ? [\"Expression\"] : [\"Identifier\", \"StringLiteral\", \"NumericLiteral\"];\n        _index2.assertNodeType.apply(undefined, expectedTypes)(node, key, val);\n      }\n    },\n    decorators: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Decorator\")))\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\")\n    },\n    generator: {\n      default: false,\n      validate: (0, _index2.assertValueType)(\"boolean\")\n    },\n    async: {\n      default: false,\n      validate: (0, _index2.assertValueType)(\"boolean\")\n    }\n  },\n  visitor: [\"key\", \"params\", \"body\", \"decorators\", \"returnType\", \"typeParameters\"],\n  aliases: [\"UserWhitespacable\", \"Function\", \"Scopable\", \"BlockParent\", \"FunctionParent\", \"Method\", \"ObjectMember\"]\n});\n\n(0, _index3.default)(\"ObjectProperty\", {\n  builder: [\"key\", \"value\", \"computed\", \"shorthand\", \"decorators\"],\n  fields: {\n    computed: {\n      validate: (0, _index2.assertValueType)(\"boolean\"),\n      default: false\n    },\n    key: {\n      validate: function validate(node, key, val) {\n        var expectedTypes = node.computed ? [\"Expression\"] : [\"Identifier\", \"StringLiteral\", \"NumericLiteral\"];\n        _index2.assertNodeType.apply(undefined, expectedTypes)(node, key, val);\n      }\n    },\n    value: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    shorthand: {\n      validate: (0, _index2.assertValueType)(\"boolean\"),\n      default: false\n    },\n    decorators: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Decorator\"))),\n      optional: true\n    }\n  },\n  visitor: [\"key\", \"value\", \"decorators\"],\n  aliases: [\"UserWhitespacable\", \"Property\", \"ObjectMember\"]\n});\n\n(0, _index3.default)(\"RestElement\", {\n  visitor: [\"argument\", \"typeAnnotation\"],\n  aliases: [\"LVal\"],\n  fields: {\n    argument: {\n      validate: (0, _index2.assertNodeType)(\"LVal\")\n    },\n    decorators: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Decorator\")))\n    }\n  }\n});\n\n(0, _index3.default)(\"ReturnStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: (0, _index2.assertNodeType)(\"Expression\"),\n      optional: true\n    }\n  }\n});\n\n(0, _index3.default)(\"SequenceExpression\", {\n  visitor: [\"expressions\"],\n  fields: {\n    expressions: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Expression\")))\n    }\n  },\n  aliases: [\"Expression\"]\n});\n\n(0, _index3.default)(\"SwitchCase\", {\n  visitor: [\"test\", \"consequent\"],\n  fields: {\n    test: {\n      validate: (0, _index2.assertNodeType)(\"Expression\"),\n      optional: true\n    },\n    consequent: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"Statement\")))\n    }\n  }\n});\n\n(0, _index3.default)(\"SwitchStatement\", {\n  visitor: [\"discriminant\", \"cases\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Scopable\"],\n  fields: {\n    discriminant: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    cases: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"SwitchCase\")))\n    }\n  }\n});\n\n(0, _index3.default)(\"ThisExpression\", {\n  aliases: [\"Expression\"]\n});\n\n(0, _index3.default)(\"ThrowStatement\", {\n  visitor: [\"argument\"],\n  aliases: [\"Statement\", \"Terminatorless\", \"CompletionStatement\"],\n  fields: {\n    argument: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    }\n  }\n});\n\n// todo: at least handler or finalizer should be set to be valid\n(0, _index3.default)(\"TryStatement\", {\n  visitor: [\"block\", \"handler\", \"finalizer\"],\n  aliases: [\"Statement\"],\n  fields: {\n    body: {\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\")\n    },\n    handler: {\n      optional: true,\n      handler: (0, _index2.assertNodeType)(\"BlockStatement\")\n    },\n    finalizer: {\n      optional: true,\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\")\n    }\n  }\n});\n\n(0, _index3.default)(\"UnaryExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: true\n    },\n    argument: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    operator: {\n      validate: _index2.assertOneOf.apply(undefined, _constants.UNARY_OPERATORS)\n    }\n  },\n  visitor: [\"argument\"],\n  aliases: [\"UnaryLike\", \"Expression\"]\n});\n\n(0, _index3.default)(\"UpdateExpression\", {\n  builder: [\"operator\", \"argument\", \"prefix\"],\n  fields: {\n    prefix: {\n      default: false\n    },\n    argument: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    operator: {\n      validate: _index2.assertOneOf.apply(undefined, _constants.UPDATE_OPERATORS)\n    }\n  },\n  visitor: [\"argument\"],\n  aliases: [\"Expression\"]\n});\n\n(0, _index3.default)(\"VariableDeclaration\", {\n  builder: [\"kind\", \"declarations\"],\n  visitor: [\"declarations\"],\n  aliases: [\"Statement\", \"Declaration\"],\n  fields: {\n    kind: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"string\"), (0, _index2.assertOneOf)(\"var\", \"let\", \"const\"))\n    },\n    declarations: {\n      validate: (0, _index2.chain)((0, _index2.assertValueType)(\"array\"), (0, _index2.assertEach)((0, _index2.assertNodeType)(\"VariableDeclarator\")))\n    }\n  }\n});\n\n(0, _index3.default)(\"VariableDeclarator\", {\n  visitor: [\"id\", \"init\"],\n  fields: {\n    id: {\n      validate: (0, _index2.assertNodeType)(\"LVal\")\n    },\n    init: {\n      optional: true,\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    }\n  }\n});\n\n(0, _index3.default)(\"WhileStatement\", {\n  visitor: [\"test\", \"body\"],\n  aliases: [\"Statement\", \"BlockParent\", \"Loop\", \"While\", \"Scopable\"],\n  fields: {\n    test: {\n      validate: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\", \"Statement\")\n    }\n  }\n});\n\n(0, _index3.default)(\"WithStatement\", {\n  visitor: [\"object\", \"body\"],\n  aliases: [\"Statement\"],\n  fields: {\n    object: {\n      object: (0, _index2.assertNodeType)(\"Expression\")\n    },\n    body: {\n      validate: (0, _index2.assertNodeType)(\"BlockStatement\", \"Statement\")\n    }\n  }\n});"]}