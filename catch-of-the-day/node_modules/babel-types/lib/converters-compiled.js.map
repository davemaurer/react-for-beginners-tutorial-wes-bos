{"version":3,"sources":["converters.js"],"names":[],"mappings":"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","file":"converters-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _maxSafeInteger = require(\"babel-runtime/core-js/number/max-safe-integer\");\n\nvar _maxSafeInteger2 = _interopRequireDefault(_maxSafeInteger);\n\nvar _stringify = require(\"babel-runtime/core-js/json/stringify\");\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.toComputedKey = toComputedKey;\nexports.toSequenceExpression = toSequenceExpression;\nexports.toKeyAlias = toKeyAlias;\nexports.toIdentifier = toIdentifier;\nexports.toBindingIdentifierName = toBindingIdentifierName;\nexports.toStatement = toStatement;\nexports.toExpression = toExpression;\nexports.toBlock = toBlock;\nexports.valueToNode = valueToNode;\n\nvar _isPlainObject = require(\"lodash/isPlainObject\");\n\nvar _isPlainObject2 = _interopRequireDefault(_isPlainObject);\n\nvar _isNumber = require(\"lodash/isNumber\");\n\nvar _isNumber2 = _interopRequireDefault(_isNumber);\n\nvar _isRegExp = require(\"lodash/isRegExp\");\n\nvar _isRegExp2 = _interopRequireDefault(_isRegExp);\n\nvar _isString = require(\"lodash/isString\");\n\nvar _isString2 = _interopRequireDefault(_isString);\n\nvar _index = require(\"./index\");\n\nvar t = _interopRequireWildcard(_index);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction toComputedKey(node) {\n  var key = arguments.length <= 1 || arguments[1] === undefined ? node.key || node.property : arguments[1];\n\n  if (!node.computed) {\n    if (t.isIdentifier(key)) key = t.stringLiteral(key.name);\n  }\n  return key;\n}\n\n/**\n * Turn an array of statement `nodes` into a `SequenceExpression`.\n *\n * Variable declarations are turned into simple assignments and their\n * declarations hoisted to the top of the current scope.\n *\n * Expression statements are just resolved to their expression.\n */\n\nfunction toSequenceExpression(nodes, scope) {\n  if (!nodes || !nodes.length) return;\n\n  var declars = [];\n  var bailed = false;\n\n  var result = convert(nodes);\n  if (bailed) return;\n\n  for (var i = 0; i < declars.length; i++) {\n    scope.push(declars[i]);\n  }\n\n  return result;\n\n  function convert(nodes) {\n    var ensureLastUndefined = false;\n    var exprs = [];\n\n    for (var _iterator = nodes, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var node = _ref;\n\n      if (t.isExpression(node)) {\n        exprs.push(node);\n      } else if (t.isExpressionStatement(node)) {\n        exprs.push(node.expression);\n      } else if (t.isVariableDeclaration(node)) {\n        if (node.kind !== \"var\") return bailed = true; // bailed\n\n        for (var _iterator2 = node.declarations, _isArray2 = Array.isArray(_iterator2), _i2 = 0, _iterator2 = _isArray2 ? _iterator2 : (0, _getIterator3.default)(_iterator2);;) {\n          var _ref2;\n\n          if (_isArray2) {\n            if (_i2 >= _iterator2.length) break;\n            _ref2 = _iterator2[_i2++];\n          } else {\n            _i2 = _iterator2.next();\n            if (_i2.done) break;\n            _ref2 = _i2.value;\n          }\n\n          var declar = _ref2;\n\n          var bindings = t.getBindingIdentifiers(declar);\n          for (var key in bindings) {\n            declars.push({\n              kind: node.kind,\n              id: bindings[key]\n            });\n          }\n\n          if (declar.init) {\n            exprs.push(t.assignmentExpression(\"=\", declar.id, declar.init));\n          }\n        }\n\n        ensureLastUndefined = true;\n        continue;\n      } else if (t.isIfStatement(node)) {\n        var consequent = node.consequent ? convert([node.consequent]) : scope.buildUndefinedNode();\n        var alternate = node.alternate ? convert([node.alternate]) : scope.buildUndefinedNode();\n        if (!consequent || !alternate) return bailed = true;\n\n        exprs.push(t.conditionalExpression(node.test, consequent, alternate));\n      } else if (t.isBlockStatement(node)) {\n        exprs.push(convert(node.body));\n      } else if (t.isEmptyStatement(node)) {\n        // empty statement so ensure the last item is undefined if we're last\n        ensureLastUndefined = true;\n        continue;\n      } else {\n        // bailed, we can't turn this statement into an expression\n        return bailed = true;\n      }\n\n      ensureLastUndefined = false;\n    }\n\n    if (ensureLastUndefined || exprs.length === 0) {\n      exprs.push(scope.buildUndefinedNode());\n    }\n\n    //\n\n    if (exprs.length === 1) {\n      return exprs[0];\n    } else {\n      return t.sequenceExpression(exprs);\n    }\n  }\n}\n\n// Can't use import because of cyclic dependency between babel-traverse\n// and this module (babel-types). This require needs to appear after\n// we export the TYPES constant, so we lazy-initialize it before use.\nvar traverse = void 0;\n\nfunction toKeyAlias(node) {\n  var key = arguments.length <= 1 || arguments[1] === undefined ? node.key : arguments[1];\n\n  if (!traverse) traverse = require(\"babel-traverse\").default;\n\n  var alias = void 0;\n\n  if (node.kind === \"method\") {\n    return toKeyAlias.increment() + \"\";\n  } else if (t.isIdentifier(key)) {\n    alias = key.name;\n  } else if (t.isStringLiteral(key)) {\n    alias = (0, _stringify2.default)(key.value);\n  } else {\n    alias = (0, _stringify2.default)(traverse.removeProperties(t.cloneDeep(key)));\n  }\n\n  if (node.computed) {\n    alias = \"[\" + alias + \"]\";\n  }\n\n  if (node.static) {\n    alias = \"static:\" + alias;\n  }\n\n  return alias;\n}\n\ntoKeyAlias.uid = 0;\n\ntoKeyAlias.increment = function () {\n  if (toKeyAlias.uid >= _maxSafeInteger2.default) {\n    return toKeyAlias.uid = 0;\n  } else {\n    return toKeyAlias.uid++;\n  }\n};\n\nfunction toIdentifier(name) {\n  name = name + \"\";\n\n  // replace all non-valid identifiers with dashes\n  name = name.replace(/[^a-zA-Z0-9$_]/g, \"-\");\n\n  // remove all dashes and numbers from start of name\n  name = name.replace(/^[-0-9]+/, \"\");\n\n  // camel case\n  name = name.replace(/[-\\s]+(.)?/g, function (match, c) {\n    return c ? c.toUpperCase() : \"\";\n  });\n\n  if (!t.isValidIdentifier(name)) {\n    name = \"_\" + name;\n  }\n\n  return name || \"_\";\n}\n\nfunction toBindingIdentifierName(name) {\n  name = toIdentifier(name);\n  if (name === \"eval\" || name === \"arguments\") name = \"_\" + name;\n  return name;\n}\n\n/**\n * [Please add a description.]\n * @returns {Object|Boolean}\n */\n\nfunction toStatement(node, ignore) {\n  if (t.isStatement(node)) {\n    return node;\n  }\n\n  var mustHaveId = false;\n  var newType = void 0;\n\n  if (t.isClass(node)) {\n    mustHaveId = true;\n    newType = \"ClassDeclaration\";\n  } else if (t.isFunction(node)) {\n    mustHaveId = true;\n    newType = \"FunctionDeclaration\";\n  } else if (t.isAssignmentExpression(node)) {\n    return t.expressionStatement(node);\n  }\n\n  if (mustHaveId && !node.id) {\n    newType = false;\n  }\n\n  if (!newType) {\n    if (ignore) {\n      return false;\n    } else {\n      throw new Error(\"cannot turn \" + node.type + \" to a statement\");\n    }\n  }\n\n  node.type = newType;\n\n  return node;\n}\n\nfunction toExpression(node) {\n  if (t.isExpressionStatement(node)) {\n    node = node.expression;\n  }\n\n  if (t.isClass(node)) {\n    node.type = \"ClassExpression\";\n  } else if (t.isFunction(node)) {\n    node.type = \"FunctionExpression\";\n  }\n\n  if (t.isExpression(node)) {\n    return node;\n  } else {\n    throw new Error(\"cannot turn \" + node.type + \" to an expression\");\n  }\n}\n\nfunction toBlock(node, parent) {\n  if (t.isBlockStatement(node)) {\n    return node;\n  }\n\n  if (t.isEmptyStatement(node)) {\n    node = [];\n  }\n\n  if (!Array.isArray(node)) {\n    if (!t.isStatement(node)) {\n      if (t.isFunction(parent)) {\n        node = t.returnStatement(node);\n      } else {\n        node = t.expressionStatement(node);\n      }\n    }\n\n    node = [node];\n  }\n\n  return t.blockStatement(node);\n}\n\nfunction valueToNode(value) {\n  // undefined\n  if (value === undefined) {\n    return t.identifier(\"undefined\");\n  }\n\n  // boolean\n  if (value === true || value === false) {\n    return t.booleanLiteral(value);\n  }\n\n  // null\n  if (value === null) {\n    return t.nullLiteral();\n  }\n\n  // strings\n  if ((0, _isString2.default)(value)) {\n    return t.stringLiteral(value);\n  }\n\n  // numbers\n  if ((0, _isNumber2.default)(value)) {\n    return t.numericLiteral(value);\n  }\n\n  // regexes\n  if ((0, _isRegExp2.default)(value)) {\n    var pattern = value.source;\n    var flags = value.toString().match(/\\/([a-z]+|)$/)[1];\n    return t.regExpLiteral(pattern, flags);\n  }\n\n  // array\n  if (Array.isArray(value)) {\n    return t.arrayExpression(value.map(t.valueToNode));\n  }\n\n  // object\n  if ((0, _isPlainObject2.default)(value)) {\n    var props = [];\n    for (var key in value) {\n      var nodeKey = void 0;\n      if (t.isValidIdentifier(key)) {\n        nodeKey = t.identifier(key);\n      } else {\n        nodeKey = t.stringLiteral(key);\n      }\n      props.push(t.objectProperty(nodeKey, t.valueToNode(value[key])));\n    }\n    return t.objectExpression(props);\n  }\n\n  throw new Error(\"don't know how to turn this value into a node\");\n}"]}