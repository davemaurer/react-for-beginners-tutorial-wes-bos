{"version":3,"sources":["validators.js"],"names":[],"mappings":"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","file":"validators-compiled.js","sourcesContent":["\"use strict\";\n\nexports.__esModule = true;\n\nvar _getIterator2 = require(\"babel-runtime/core-js/get-iterator\");\n\nvar _getIterator3 = _interopRequireDefault(_getIterator2);\n\nexports.isBinding = isBinding;\nexports.isReferenced = isReferenced;\nexports.isValidIdentifier = isValidIdentifier;\nexports.isLet = isLet;\nexports.isBlockScoped = isBlockScoped;\nexports.isVar = isVar;\nexports.isSpecifierDefault = isSpecifierDefault;\nexports.isScope = isScope;\nexports.isImmutable = isImmutable;\n\nvar _retrievers = require(\"./retrievers\");\n\nvar _esutils = require(\"esutils\");\n\nvar _esutils2 = _interopRequireDefault(_esutils);\n\nvar _index = require(\"./index\");\n\nvar t = _interopRequireWildcard(_index);\n\nvar _constants = require(\"./constants\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Check if the input `node` is a binding identifier.\n */\n\n/* eslint indent: 0 */\n\nfunction isBinding(node, parent) {\n  var keys = _retrievers.getBindingIdentifiers.keys[parent.type];\n  if (keys) {\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n      var val = parent[key];\n      if (Array.isArray(val)) {\n        if (val.indexOf(node) >= 0) return true;\n      } else {\n        if (val === node) return true;\n      }\n    }\n  }\n\n  return false;\n}\n\n/**\n * Check if the input `node` is a reference to a bound variable.\n */\n\nfunction isReferenced(node, parent) {\n  switch (parent.type) {\n    // yes: object::NODE\n    // yes: NODE::callee\n    case \"BindExpression\":\n      return parent.object === node || parent.callee === node;\n\n    // yes: PARENT[NODE]\n    // yes: NODE.child\n    // no: parent.NODE\n    case \"MemberExpression\":\n    case \"JSXMemberExpression\":\n      if (parent.property === node && parent.computed) {\n        return true;\n      } else if (parent.object === node) {\n        return true;\n      } else {\n        return false;\n      }\n\n    // no: new.NODE\n    // no: NODE.target\n    case \"MetaProperty\":\n      return false;\n\n    // yes: { [NODE]: \"\" }\n    // yes: { NODE }\n    // no: { NODE: \"\" }\n    case \"ObjectProperty\":\n      if (parent.key === node) {\n        return parent.computed;\n      }\n\n    // no: let NODE = init;\n    // yes: let id = NODE;\n    case \"VariableDeclarator\":\n      return parent.id !== node;\n\n    // no: function NODE() {}\n    // no: function foo(NODE) {}\n    case \"ArrowFunctionExpression\":\n    case \"FunctionDeclaration\":\n    case \"FunctionExpression\":\n      for (var _iterator = parent.params, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : (0, _getIterator3.default)(_iterator);;) {\n        var _ref;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref = _i.value;\n        }\n\n        var param = _ref;\n\n        if (param === node) return false;\n      }\n\n      return parent.id !== node;\n\n    // no: export { foo as NODE };\n    // yes: export { NODE as foo };\n    // no: export { NODE as foo } from \"foo\";\n    case \"ExportSpecifier\":\n      if (parent.source) {\n        return false;\n      } else {\n        return parent.local === node;\n      }\n\n    // no: export NODE from \"foo\";\n    // no: export * as NODE from \"foo\";\n    case \"ExportNamespaceSpecifier\":\n    case \"ExportDefaultSpecifier\":\n      return false;\n\n    // no: <div NODE=\"foo\" />\n    case \"JSXAttribute\":\n      return parent.name !== node;\n\n    // no: class { NODE = value; }\n    // yes: class { key = NODE; }\n    case \"ClassProperty\":\n      return parent.value === node;\n\n    // no: import NODE from \"foo\";\n    // no: import * as NODE from \"foo\";\n    // no: import { NODE as foo } from \"foo\";\n    // no: import { foo as NODE } from \"foo\";\n    // no: import NODE from \"bar\";\n    case \"ImportDefaultSpecifier\":\n    case \"ImportNamespaceSpecifier\":\n    case \"ImportSpecifier\":\n      return false;\n\n    // no: class NODE {}\n    case \"ClassDeclaration\":\n    case \"ClassExpression\":\n      return parent.id !== node;\n\n    // yes: class { [NODE]() {} }\n    case \"ClassMethod\":\n    case \"ObjectMethod\":\n      return parent.key === node && parent.computed;\n\n    // no: NODE: for (;;) {}\n    case \"LabeledStatement\":\n      return false;\n\n    // no: try {} catch (NODE) {}\n    case \"CatchClause\":\n      return parent.param !== node;\n\n    // no: function foo(...NODE) {}\n    case \"RestElement\":\n      return false;\n\n    // yes: left = NODE;\n    // no: NODE = right;\n    case \"AssignmentExpression\":\n      return parent.right === node;\n\n    // no: [NODE = foo] = [];\n    // yes: [foo = NODE] = [];\n    case \"AssignmentPattern\":\n      return parent.right === node;\n\n    // no: [NODE] = [];\n    // no: ({ NODE }) = [];\n    case \"ObjectPattern\":\n    case \"ArrayPattern\":\n      return false;\n  }\n\n  return true;\n}\n\n/**\n * Check if the input `name` is a valid identifier name\n * and isn't a reserved word.\n */\n\nfunction isValidIdentifier(name) {\n  if (typeof name !== \"string\" || _esutils2.default.keyword.isReservedWordES6(name, true)) {\n    return false;\n  } else {\n    return _esutils2.default.keyword.isIdentifierNameES6(name);\n  }\n}\n\n/**\n * Check if the input `node` is a `let` variable declaration.\n */\n\nfunction isLet(node) {\n  return t.isVariableDeclaration(node) && (node.kind !== \"var\" || node[_constants.BLOCK_SCOPED_SYMBOL]);\n}\n\n/**\n * Check if the input `node` is block scoped.\n */\n\nfunction isBlockScoped(node) {\n  return t.isFunctionDeclaration(node) || t.isClassDeclaration(node) || t.isLet(node);\n}\n\n/**\n * Check if the input `node` is a variable declaration.\n */\n\nfunction isVar(node) {\n  return t.isVariableDeclaration(node, { kind: \"var\" }) && !node[_constants.BLOCK_SCOPED_SYMBOL];\n}\n\n/**\n * Check if the input `specifier` is a `default` import or export.\n */\n\nfunction isSpecifierDefault(specifier) {\n  return t.isImportDefaultSpecifier(specifier) || t.isIdentifier(specifier.imported || specifier.exported, { name: \"default\" });\n}\n\n/**\n * Check if the input `node` is a scope.\n */\n\nfunction isScope(node, parent) {\n  if (t.isBlockStatement(node) && t.isFunction(parent, { body: node })) {\n    return false;\n  }\n\n  return t.isScopable(node);\n}\n\n/**\n * Check if the input `node` is definitely immutable.\n */\n\nfunction isImmutable(node) {\n  if (t.isType(node.type, \"Immutable\")) return true;\n\n  if (t.isIdentifier(node)) {\n    if (node.name === \"undefined\") {\n      // immutable!\n      return true;\n    } else {\n      // no idea...\n      return false;\n    }\n  }\n\n  return false;\n}"]}